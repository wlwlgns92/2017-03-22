package Day05;

public class Day05_1 {
	/*
	 * 1. 출력[System.out.prinln]
	 * 2. 입력[Scanner]
	 * 3. 데이터저장[변수 : 자료형]
	 * 4. 데이터연산[연산자]
	 * 5. 제어문/ 반복문
	 * 6. 배열 : 동일한 자료의 변수를 여러개 선언[저장순서 = 인덱스]
	 */
	public static void main(String[] args) {
		// 복습
			//변수 : 미리 정해진 크기의[자료형] 데이터 저장
				//1. 자료형 2. 변수명 3. 초기값;
					//int a = 10; [4바이트]
				//많은 변수가 필요할때 선언과 관리 효율이 떨어짐
			//배열 : 동일한 자료형을 가진 여러개 변수 선언
				// 1. 자료형, 2. 배열명, 3. 배열길이[변수개수]
				// 2. 저장되는 순서는 인덱스라고 한다. [ 0 ~ 배열길이-1]
				// 3. 메모리 효율성 감소 <--->리스트랑 비교
				// int[] 배열 = new int[10]; 이 배열의 크기는 4바이트*10 = 40바이트
				//변수 / 배열 -> 메모리
					// 1. 메모리는 하나의 자료형의 크기만큼 주소값 생성 [16진수 : 생성]
					// 2. 컴퓨터는 주소값을 통한 메모리 접근
				// 1차원 배열 	: 배열의 길이 
					int[] 배열 = new int[3];
						배열[0] = 80; 배열[1] = 90;	배열[2] = 100;
				// 2차원 배열 : 배열의 [가로(행) , 세로(열)] 
					int[][] 배열2 = new int[2][3];
						배열2[0][0] = 80; 배열2[0][1] = 90; 배열2[0][2] = 100;
						배열2[1][0] = 40; 배열2[1][1] = 50; 배열2[1][2] = 60;
						
						System.out.println("2차원 배열 : "+배열2);
						System.out.println(배열2[0][0]);
						System.out.println("배열의 전체 가로길이 : " + 배열2.length);
						System.out.println("배열의 전체 세로 길이 : " + 배열2[0].length);
				// 3차원 배열 : 배열의 [가로,세로,높이] 
					// int[][][] 배열 3 = new int[10][10][10] //4바이트 * 10 * 10 * 10 = > 4000바이트
		
				//문제1 : 반복문을 이용한 0 ~ 49 첫번쨰 행에 저장
						// 50부터 99까지는 두번째 행에 저장하는 2차원 배열을 선언하고 출력
						
					int[][] 문제1 = new int[2][50]; // 4바이트 * 2 * 50 = > 400바이트
						
						for(int i =0; i < 100; i++) { //i는 0 ~ 100미만까지 1씩 증가하면서 반복
							if(i<50) 문제1[0][i] = i; //해당 i 인덱스의 i 값 넣기
							else 문제1[1][i-50] = i;
						}
						for(int i =0; i < 100; i++) {
							if(i<50) System.out.printf("[%2d]" ,문제1[0][i]);
						else System.out.printf("[%2d]" , 문제1[1][i-50]);
							if ( i == 49) System.out.println();
						}
	}
}
